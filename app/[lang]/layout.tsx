import type { Metadata, Viewport } from "next";
import { Nunito } from "next/font/google";
import { Providers } from "./providers";
import "@/src/style/globals.css";
import { languages } from "../i18/settings";
import { dir } from "i18next";

const nunuto = Nunito({
  subsets: ["latin"],
  display: "swap",
  weight: "400",
});

export async function generateStaticParams() {
  return languages.map((lng) => ({ lng }));
}

export const metadata: Metadata = {
  applicationName: "Flashcards",
  title: {
    default: "Laitner flashcards",
    template: "Laitner flashcards",
  },
  description: "Generated by ScripterUz",
  manifest: "/manifest.json",
  appleWebApp: {
    capable: true,
    statusBarStyle: "default",
    title: "Laitner flashcards",
  },
  formatDetection: {
    telephone: false,
  },
  openGraph: {
    type: "website",
    siteName: "Flashcards",
    title: {
      default: "Laitner flashcards",
      template: "Laitner flashcards",
    },
    description: "Generated by ScripterUz",
  },
  twitter: {
    card: "summary",
    title: {
      default: "Flashcards",
      template: "Flashcards",
    },
    description: "Generated by ScripterUz",
  },
};

export const viewport: Viewport = {
  themeColor: "#FFFFFF",
};

export default function RootLayout({
  children,
  params: { lang },
}: Readonly<{
  children: React.ReactNode;
  params: { lang: string };
}>) {
  return (
    <html lang={lang} dir={dir(lang)}>
      <head>
        <link rel="icon" href="/favicon.ico" />
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <link rel="manifest" href="/manifest.json" />
      </head>
      <body className={nunuto.className}>
        <Providers lang={lang}>{children}</Providers>
      </body>
    </html>
  );
}
